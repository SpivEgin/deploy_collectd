- name: Get to know the servers a bit and make sure some basic things are in order
  hosts: "{{ hosts | default('all') }}"
  tasks:

    - name: Discover OS
      debug:
        msg: "Distro: {{ ansible_distribution }}. Family: {{ ansible_os_family }}. PkgMgr: {{ ansible_pkg_mgr }}"

    - name: Check if /etc/cron.d/ exists
      stat: path=/etc/cron.d
      register: cron_d
    - name: Machine has /etc/cron.d
      set_fact:
        has_cron_d: yes
      when: cron_d.stat.exists
    - name: Machine doesn't have /etc/cron.d
      set_fact:
        has_cron_d: no
      when: not cron_d.stat.exists

    - name: Make sure /etc/resolv.conf has at least one nameserver
      command: grep ^nameserver /etc/resolv.conf
      register: grep_nameserver
      changed_when: False
      failed_when: False
    - name: "WARNING: No nameserver configured, adding 8.8.8.8 to /etc/resolv.conf"
      sudo: yes
      lineinfile:
        line: nameserver 8.8.8.8
        dest: /etc/resolv.conf
        insertafter: EOF
        state: present
      when: grep_nameserver.rc == 1

    - name: Check support for OS family
      fail: msg="Distro {{ ansible_distribution }} not supported, please open a support ticket in https://github.com/mistio/deploy_collectd"
      when: ansible_os_family not in ['Debian', 'RedHat']

    - name: Group servers per OS to apply OS specific steps
      group_by: key={{ ansible_distribution }}

    - name: Group servers per OS family to apply OS family specific steps
      group_by: key={{ ansible_os_family }}_based


- name: Install CollectD for Debian based distros
  hosts: Debian_based
  gather_facts: no
  sudo: yes
  tasks:

    - name: This playbook has only been tested with Debian and Ubuntu
      debug:
        msg: "Not sure if {{ ansible_distribution }} is supported, will try and hope for the best."
      when: ansible_distribution not in ['Debian', 'Ubuntu']

    - name: Make sure hostname is registered in /etc/hosts
      command: grep -w {{ ansible_hostname }} /etc/hosts
      register: grep_hosts
      changed_when: False
      failed_when: False

    - name: "WARNING: hostname not in /etc/hosts, adding temporarily (so that apt-get install won't break in post installation due to FQDNLookup=True)"
      lineinfile:
        line: "127.0.0.1 {{ ansible_hostname }}"
        dest: /etc/hosts
        insertafter: EOF
        state: present
      when: grep_hosts.rc == 1
      notify: Remove localhost from /etc/hosts

    - name: Check if /etc/init.d/collectd exists
      stat: path=/etc/init.d/collectd
      register: st

    - name: Update package list
      apt:
        update_cache: yes
        cache_valid_time: 3600
    - name: Install collectd
      apt:
        pkg: collectd
        state: present

    - name: Stop collectd system service, if it wasn't previously running
      service:
        name: collectd
        state: stopped
        # enabled: no
      when: not st.stat.exists  # => collectd wasn't previously installed

    - name: Disable collectd system service, if it wasn't previously running
      lineinfile:
        regexp: ^DISABLE=
        line: DISABLE=1
        dest: /etc/default/collectd
      when: not st.stat.exists  # => collectd wasn't previously installed

  handlers:
    # this is a handler so that in combination with --force-handlers it also runs if a failure occured
    - name: Remove localhost from /etc/hosts
      lineinfile:
        line: "127.0.0.1 {{ ansible_hostname }}"
        dest: /etc/hosts
        state: absent


- name: Install CollectD for Fedora
  hosts: Fedora
  gather_facts: no
  sudo: yes
  tasks:
    - name: Install collectd
      yum:
        name: collectd
        state: present


- name: Install CollectD for RedHat based distros (excluding Fedora)
  hosts: RedHat_based:!Fedora
  gather_facts: no
  sudo: yes
  tasks:
    - name: This playbook has only been tested with CentOS, RHEL
      debug:
        msg: "Not sure if {{ ansible_distribution }} is supported, will try and hope for the best."
      when: ansible_distribution not in ['CentOS', 'RedHat']

    - name: Check if /etc/yum.repos.d/epel.repo exists
      stat: path=/etc/yum.repos.d/epel.repo
      register: st
    - name: Install epel-release if /etc/yum.repos.d/epel.repo missing
      yum:
        name: epel-release
        state: present
      when: not st.stat.exists
    - name: Install collectd from epel repo
      yum:
        name: collectd
        state: present
        enablerepo: epel
    - name: Disable epel repository if it was initially disabled
      ini_file: dest=/etc/yum.repos.d/epel.repo
        section=epel
        option=enabled
        value=0
      when: not st.stat.exists


- name: Configure and start collectd
  hosts: "{{ hosts | default('all') }}"
  gather_facts: no
  sudo: yes
  vars:
    monitor: monitor1.mist.io
  tasks:

    - name: Set up cron entry for mistio-collectd to start at boot
      cron:
        name: mistio-collectd
        user: root
        special_time: reboot
        job: /opt/mistio-collectd/collectd.sh start
        cron_file: mistio-collectd
      when: has_cron_d

    - name: Set up cron entry to restart mistio-collectd daily
      cron:
        name: mistio-collectd daily restart to resolve monitor hostname
        user: root
        minute: 0
        hour: 0
        job: /opt/mistio-collectd/collectd.sh restart
        cron_file: mistio-collectd
      when: has_cron_d

    - name: /etc/cron.d missing
      debug:
        msg: seriously?
      when: not has_cron_d

    - name: Create /opt/mistio-collectd/ directory
      file:
        path: /opt/mistio-collectd
        state: directory

    - name: Generate collectd config file
      template:
        src: collectd.conf.j2
        dest: /opt/mistio-collectd/collectd.conf

    - name: Generate collectd init script
      copy:
        src: collectd.sh
        dest: /opt/mistio-collectd/collectd.sh
        mode: 0755

    - name: Generate mistio-collectd uuid file
      copy:
        content: "{{ uuid }}"
        dest: /opt/mistio-collectd/uuid

    - name: Start collectd
      shell: /opt/mistio-collectd/collectd.sh start
